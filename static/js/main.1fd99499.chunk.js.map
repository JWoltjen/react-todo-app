{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Date","now","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMA2CeA,MAzCf,SAAkBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAoBxB,OAlBAC,qBAAU,WACNF,EAASG,QAAQC,WAkBjB,8BACI,uBAAMC,UAAU,YAAYC,SAZf,SAAAC,GACjBA,EAAEC,iBACFZ,EAAMU,SAAS,CACXG,GAAIC,KAAKC,MACTC,KAAMd,IAGVC,EAAS,KAKL,UACI,uBACAc,KAAK,OACLC,YAAY,aACZC,MAAOjB,EACPkB,KAAK,OACLX,UAAU,aACVY,SAvBS,SAAAV,GACjBR,EAASQ,EAAEW,OAAOH,QAuBVI,IAAKnB,IAEL,wBAAQK,UAAU,cAAlB,4B,sBCODe,MAvCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EACjC3B,mBAAS,CAC7BY,GAAI,KACJM,MAAO,KAH8C,mBAClDU,EADkD,KAC5CC,EAD4C,KAczD,OAAGD,EAAKhB,GACG,cAAC,EAAD,CAAUgB,KAAMA,EAAMnB,SATZ,SAAAS,GACjBS,EAAWC,EAAKhB,GAAIM,GACpBW,EAAQ,CACJjB,GAAI,KACJM,MAAO,QAQRM,EAAMM,KAAI,SAACC,EAAKC,GAAN,OACb,sBACIxB,UAAWuB,EAAKE,WAAa,oBAAsB,WADvD,UAIQ,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKnB,KAApD,SACKmB,EAAKhB,MADAgB,EAAKnB,IAGnB,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CACA0B,QAAS,kBAAMR,EAAWK,EAAKnB,KAC/BJ,UAAU,gBAEV,cAAC,IAAD,CAAQ0B,QAAS,kBAAML,EAAQ,CAAEjB,GAAImB,EAAKnB,GAAIM,MAAOa,EAAKhB,QAC1DP,UAAU,mBAXTwB,OC2BFG,MA/Cf,WAAqB,IAAD,EACUnC,mBAAS,IADnB,mBACTwB,EADS,KACFY,EADE,KAiChB,OACI,gCACI,2DACA,cAAC,EAAD,CAAU3B,SAjCF,SAAAsB,GACZ,GAAIA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAAnC,CAGA,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaP,IAC3BY,EAASE,OA6BL,cAAC,EAAD,CACAd,MAAOA,EACPC,aAfa,SAAAb,GACjB,IAAI2B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKnB,KAAOA,IACZmB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IASLb,WAtBW,SAAAd,GACf,IAAM4B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKnB,KAAOA,KAExDwB,EAASI,IAoBLb,WA9BY,SAACe,EAAQC,GACpBA,EAAS5B,OAAO,QAAQsB,KAAKM,EAAS5B,OAG3CqB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAIA,EAAKjC,KAAO8B,EAASC,EAAWE,eCR3DC,MARf,WACE,OACE,qBAAKtC,UAAU,WAAf,SACE,cAAC,EAAD,OCJNuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1fd99499.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(''); \n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n    \n    const handleChange = e => {\n        setInput(e.target.value)\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault(); \n        props.onSubmit({\n            id: Date.now(),\n            text: input\n        });\n\n        setInput('')\n    };\n\n    return (\n        <div>\n            <form className='todo-form' onSubmit={handleSubmit}>\n                <input \n                type='text' \n                placeholder='add a todo' \n                value={input} \n                name=\"text\"\n                className='todo-input'\n                onChange={handleChange}\n                ref={inputRef}\n                />\n                <button className='todo-button'>Add todo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoForm\n","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport {RiCloseCircleLine} from 'react-icons/ri'\nimport {TiEdit} from 'react-icons/ti'\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value)\n        setEdit({\n            id: null, \n            value: ''\n        })\n    }\n\n    if(edit.id){\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />; \n    }\n\n    return todos.map((todo,index) => (\n        <div \n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \n            key={index}\n            >\n                <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n                    {todo.text}\n            </div>\n            <div className='icons'>\n                <RiCloseCircleLine \n                onClick={() => removeTodo(todo.id)}\n                className='delete-icon'\n                />  \n                <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text})}\n                className='edit-icon'\n                />\n            </div>\n         </div>\n    ))\n    }\n\nexport default Todo\n","import React, {useState} from 'react'\nimport TodoForm from './TodoForm'\nimport Todo from './Todo'\n\n//test//\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([])\n\n    const addTodo = todo => {\n        if(!todo.text || /^\\s*$/.test(todo.text)){\n            return;\n        }\n        const newTodos = [todo, ...todos]\n        setTodos(newTodos)\n    }\n\n     const updateTodo = (todoId, newValue) => {\n         if(!newValue.text|| /^\\s*$/.test(newValue.text)){\n            return;\n        }\n        setTodos(prev => prev.map(item =>(item.id === todoId ? newValue : item)))\n     }\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id)\n\n        setTodos(removeArr)\n    }\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id){\n                todo.isComplete = !todo.isComplete\n            }\n            return todo\n        })\n        setTodos(updatedTodos)\n    }\n    return (\n        <div>\n            <h1> What are we doing today?</h1>\n            <TodoForm onSubmit={addTodo}/>\n            <Todo \n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            updateTodo={updateTodo}\n            /> \n        </div>\n    )\n}\n\nexport default TodoList\n","\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/> \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}